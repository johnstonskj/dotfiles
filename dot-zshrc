############################################################################
# Top-level stuff
############################################################################

# autoload -U compaudit
# autoload -Uz compinit
# rm -f ~/.zcompdump; compinit

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

POWERLEVEL9K_MODE='nerdfont-complete'
ZSH_THEME="powerlevel9k/powerlevel9k"

############################################################################
# Stuff added by Zsh setup
############################################################################

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

############################################################################
# Plugin and other customization
############################################################################

# Which plugins would you like to load?
plugins=(git github gnu-utils python pip tmux)
if [[ $OSTYPE = (darwin|freebsd)* ]] ; then
	plugins+=(osx)
	brew_prefix=$(brew --prefix)

	if type brew &>/dev/null; then
  	   FPATH=$brew_prefix/share/zsh/functions:$brew_prefix/share/zsh/site-functions:$FPATH
	   
	   FPATH=$brew_prefix/share/zsh-completions:$FPATH
	   
	   FPATH=$brew_prefix/share/zsh-navigation-tools:$FPATH
	   source $brew_prefix/share/zsh-navigation-tools/zsh-navigation-tools.plugin.zsh
	fi
fi

source $ZSH/oh-my-zsh.sh

############################################################################
# Prompt/Path/Environment customizations
############################################################################

POWERLEVEL9K_DIR_LINK_ICON="\uf838" # 

prompt_dir_link() {
    if [ -h `pwd` ] ; then
	echo -n "$POWERLEVEL9K_DIR_LINK_ICON "
    else
	echo -n "";
    fi
}

POWERLEVEL9K_DISK_USAGE_ONLY_WARNING=true
POWERLEVEL9K_DISK_USAGE_WARNING_LEVEL=85
POWERLEVEL9K_SHORTEN_DELIMITER=\u22ef # ⋯

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon root_indicator context dir dir_link dir_writable vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status battery disk_usage ram load ssh background_jobs time)

if [ -d "$HOME/bin" ] ; then
    PATH=$HOME/bin:$PATH
fi

if [ -d "/usr/local" ] ; then
    PATH=/usr/local/bin:/usr/local/sbin:/usr/local/sbin:$PATH
    export MANPATH=/usr/local/man:$MANPATH
fi

export EDITOR='emacs'

export ARCHFLAGS="-arch x86_64"

export SSH_KEY_PATH="~/.ssh/rsa_id"

############################################################################
# Aliases
############################################################################

if [[ $OSTYPE = (darwin|freebsd)* ]] ; then
   SED=gsed
else
   SED=sed
fi

alias ll='ls -alF'
alias weather='curl wttr.in'
alias hd='od -tcx1'
alias dtree="find . -print | sed 's;[^/]*/;|___;g;s;___|; |;g'"
alias todo="find . -type f | xargs grep -n 'TODO:' | $SED $'1i\\\\\nFILE:LINE:MEMO:COMMENT\n' | $SED -r 's/:[ ]+[^T]*/:/' | column -t -s ':'"
alias hangouts='hangups --col-scheme=solarized-dark'
alias tmls='tmux ls'
alias tma='tmux a'

# Docker image commands
alias amazon-linux='docker run -it amazonlinux:latest /bin/bash'
alias docker-ubuntu='docker run -it ubuntu bash'

############################################################################
# Package-specific customizations
############################################################################

if [[ $OSTYPE = (darwin|freebsd)* ]] ; then
    # >>> conda initialize >>>
    # !! Contents within this block are managed by 'conda init' !!
    __conda_setup="$('/Users/simonjo/anaconda/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
	eval "$__conda_setup"
    else
	if [ -f "/Users/simonjo/anaconda/etc/profile.d/conda.sh" ]; then
            . "/Users/simonjo/anaconda/etc/profile.d/conda.sh"
	else
            export PATH="/Users/simonjo/anaconda/bin:$PATH"
	fi
    fi
    unset __conda_setup
    # <<< conda initialize <<<
fi

#>>>>>>>>>> Ruby
export PATH=/usr/local/lib/ruby/gems/2.6.0/bin:$PATH
export PATH=/usr/local/opt/ruby/bin:$PATH
export PATH=$PATH:$HOME/.rvm/bin
#export LDFLAGS="-L/usr/local/opt/ruby/lib $LDFLAGS"
#export CPPFLAGS="-I/usr/local/opt/ruby/include $CPPFLAGS"
#export PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig"
if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
   source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
fi

#>>>>>>>>>> Racket
export RACKETVERSION=7.1
if [[ $OSTYPE = (darwin|freebsd)* ]] ; then
   export RACKETHOME=/Applications/Racket\ v$RACKETVERSION
   export RACKETUSER=$HOME/Library/Racket/$RACKETVERSION
   export PATH=$PATH:$RACKETHOME/bin:$RACKETUSER/bin
fi

#>>>>>>>>>> Rust
source $HOME/.cargo/env
export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"

#>>>>>>>>>> iTerm2
if [ -e "${HOME}/.iterm2_shell_integration.zsh" ] ; then
     source "${HOME}/.iterm2_shell_integration.zsh"
fi

#>>>>>>>>>> IDEA Plugins
export IDEA_PLUGINS=/Applications/IntelliJ\ IDEA\ CE.app/Contents/plugins
export KOTLIN_HOME=$IDEA_PLUGINS/Kotlin
export PATH=$PATH:$KOTLIN_HOME/kotlinc/bin

############################################################################
# Just in case......
############################################################################

if [ -e "$WORKDOTFILEDIR/work-zshrc" ] ; then
    source "$WORKDOTFILEDIR/work-zshrc"
fi